name: Release Build

on:
  release:
    types: [released]

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build all binaries
        run: bun run build

      - name: Upload Linux x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./open-api-pruner-linux-x64
          asset_name: open-api-pruner-linux-x64
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./open-api-pruner-linux-arm64
          asset_name: open-api-pruner-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Darwin x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./open-api-pruner-darwin-x64
          asset_name: open-api-pruner-darwin-x64
          asset_content_type: application/octet-stream

      - name: Upload Darwin ARM64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./open-api-pruner-darwin-arm64
          asset_name: open-api-pruner-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Windows x64 Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./open-api-pruner-windows-x64.exe
          asset_name: open-api-pruner-windows-x64.exe
          asset_content_type: application/octet-stream

  update-readme:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main # Explicitly checkout main branch

      - name: Update README with new version
        run: |
          VERSION="${{ needs.build-and-release.outputs.version }}"
          echo "Updating version to: $VERSION"
          sed -i "s/open-api-prune@[0-9.]\+/open-api-prune@${VERSION#v}/" README.md

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: update version in README to ${{ needs.build-and-release.outputs.version }}"
          title: "docs: update version in README to ${{ needs.build-and-release.outputs.version }}"
          body: "Updates the version number in README.md to match the new release"
          branch: "docs/update-version-${{ needs.build-and-release.outputs.version }}"
          base: main # Specify the base branch for the PR
          delete-branch: true # Clean up the feature branch after PR is merged
